{"ast":null,"code":"var _jsxFileName = \"/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport { cloneDeep, uniq } from 'lodash';\nimport Header from \"./components/Header.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetails from \"./components/PlayDetails.js\";\nimport About from \"./components/About.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plays: [],\n      genres: [],\n      currentPlay: null,\n      filteredPlays: [],\n      favourites: []\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.plays.length) {\n      try {\n        const url = \"http://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({\n          plays: data\n        });\n        this.setState({\n          genres: uniq(data, \"genre\")\n        });\n        console.log(this.state.genres);\n      } catch {\n        console.error(\"fetch error\");\n      }\n    }\n  }\n\n  render() {\n    //methods\n    const setCurrentPlay = play => {\n      this.setState({\n        currentPlay: play\n      });\n    };\n\n    const setFilteredPlays = filters => {\n      const playsCopy = cloneDeep(this.state.plays);\n\n      if (filters.text != \"\") {\n        const textFilter = filters.text;\n        playsCopy = playsCopy.find(p => p.title == textFilter);\n      }\n\n      this.setState({\n        filteredPlays: playsCopy\n      });\n    };\n\n    const addToFavourites = play => {\n      const favouritesCopy = [...this.state.favourites];\n      favouritesCopy.push(play);\n      this.setState({\n        favourites: favouritesCopy\n      });\n    };\n\n    const removeFromFavourites = play => {\n      const favouritesCopy = [...this.state.favourites];\n      favouritesCopy.splice(play, 1);\n      this.setState({\n        favourites: favouritesCopy\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          setFilteredPlays: setFilteredPlays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          setFilteredPlays: setFilteredPlays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/play-list\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(PlayList, {\n          setFilteredPlays: setFilteredPlays,\n          plays: this.state.filteredPlays,\n          genres: this.state.genres,\n          favourites: this.state.favourites,\n          addToFavourites: addToFavourites,\n          removeFromFavourites: removeFromFavourites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/play-details\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(PlayDetails, {\n          play: this.state.currentPlay,\n          favourites: this.state.favourites,\n          addToFavourites: addToFavourites,\n          removeFromFavourites: removeFromFavourites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/App.js"],"names":["React","Route","cloneDeep","uniq","Header","Home","PlayList","PlayDetails","About","App","Component","constructor","props","state","plays","genres","currentPlay","filteredPlays","favourites","componentDidMount","length","url","response","fetch","data","json","setState","console","log","error","render","setCurrentPlay","play","setFilteredPlays","filters","playsCopy","text","textFilter","find","p","title","addToFavourites","favouritesCopy","push","removeFromFavourites","splice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport {cloneDeep, uniq} from 'lodash';\nimport Header from \"./components/Header.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetails from \"./components/PlayDetails.js\";\nimport About from \"./components/About.js\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {plays:[],\n                      genres:[],\n                      currentPlay:null,\n                      filteredPlays:[],\n                      favourites:[]};\n    }\n                            \n    async componentDidMount() {\n        if (!this.state.plays.length) {\n            try {\n                const url = \"http://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n                const response = await fetch(url);\n                const data = await response.json();\n                this.setState({plays:data});\n                this.setState({genres:uniq(data, \"genre\")});\n                console.log(this.state.genres);\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n    }\n    \n    render() {\n        //methods\n        const setCurrentPlay = (play) => {\n            this.setState({currentPlay:play});\n        }\n        \n        const setFilteredPlays = (filters) => {\n            const playsCopy = cloneDeep(this.state.plays);\n            \n            if (filters.text != \"\") {\n                const textFilter = filters.text;\n                playsCopy = playsCopy.find((p) => p.title == textFilter);\n            }\n            \n            this.setState({filteredPlays:playsCopy});\n        }\n        \n        const addToFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            favouritesCopy.push(play);\n            this.setState({favourites:favouritesCopy});\n        }\n        \n        const removeFromFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            favouritesCopy.splice(play, 1);\n            this.setState({favourites:favouritesCopy});\n        }\n        \n        return (\n            <div className=\"App\">\n                <Route path=\"/\" exact><Home setFilteredPlays={setFilteredPlays}/></Route>\n                <Route path=\"/home\" exact><Home setFilteredPlays={setFilteredPlays}/></Route>\n                <Route path=\"/play-list\" exact>\n                    <PlayList setFilteredPlays={setFilteredPlays} \n                              plays={this.state.filteredPlays}\n                              genres={this.state.genres}\n                              favourites={this.state.favourites}\n                              addToFavourites={addToFavourites}\n                              removeFromFavourites={removeFromFavourites}/>\n                </Route>\n                <Route path=\"/play-details\" exact>\n                    <PlayDetails play={this.state.currentPlay}\n                                 favourites={this.state.favourites}\n                                 addToFavourites={addToFavourites}\n                                 removeFromFavourites={removeFromFavourites}/>\n                </Route>\n                <Route path=\"/about\" exact><About/></Route>\n            </div>\n        );                \n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}