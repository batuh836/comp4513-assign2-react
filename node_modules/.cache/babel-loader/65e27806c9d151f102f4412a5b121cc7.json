{"ast":null,"code":"var _jsxFileName = \"/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/components/PlayDataApp.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PlayDataTabBar from \"./PlayDataTabBar.js\";\nimport PlayDataView from \"./PlayDataView.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlayDataApp = props => {\n  _s();\n\n  const [currentTab, setCurrentTab] = React.useState(\"details\");\n\n  const updatePlayData = tab => {\n    var newPlayData = \"\";\n\n    if (tab === \"details\") {\n      newPlayData += \"Likely date of composition: \" + props.play.likelyDate;\n      newPlayData += \"Genre: \" + props.play.genre;\n      newPlayData += \"Wiki Link: \" + props.play.wiki;\n      newPlayData += \"Gutenberg: \" + props.play.gutenberg;\n      newPlayData += \"Shakespeare.org Link: \" + props.play.shakespeareOrg;\n      newPlayData += \"Description: \\n\" + props.play.desc;\n    }\n  };\n\n  const updateCurrentTab = tab => {\n    setCurrentTab(tab);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(PlayDataTabBar, {\n      currentTab: currentTab,\n      updateCurrentTab: updateCurrentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PlayDataView, {\n      currentTab: currentTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlayDataApp, \"nx28NDtC0QKrShQAwnQw7Q7EGsk=\");\n\n_c = PlayDataApp;\nexport default PlayDataApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayDataApp\");","map":{"version":3,"sources":["/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/components/PlayDataApp.js"],"names":["React","PlayDataTabBar","PlayDataView","PlayDataApp","props","currentTab","setCurrentTab","useState","updatePlayData","tab","newPlayData","play","likelyDate","genre","wiki","gutenberg","shakespeareOrg","desc","updateCurrentTab"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,KAAK,CAACO,QAAN,CAAe,SAAf,CAApC;;AAEA,QAAMC,cAAc,GAAIC,GAAD,IAAS;AAC5B,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAID,GAAG,KAAK,SAAZ,EAAuB;AACnBC,MAAAA,WAAW,IAAI,iCAAiCN,KAAK,CAACO,IAAN,CAAWC,UAA3D;AACAF,MAAAA,WAAW,IAAI,YAAYN,KAAK,CAACO,IAAN,CAAWE,KAAtC;AACAH,MAAAA,WAAW,IAAI,gBAAgBN,KAAK,CAACO,IAAN,CAAWG,IAA1C;AACAJ,MAAAA,WAAW,IAAI,gBAAgBN,KAAK,CAACO,IAAN,CAAWI,SAA1C;AACAL,MAAAA,WAAW,IAAI,2BAA2BN,KAAK,CAACO,IAAN,CAAWK,cAArD;AACAN,MAAAA,WAAW,IAAI,oBAAoBN,KAAK,CAACO,IAAN,CAAWM,IAA9C;AACH;AAEJ,GAXD;;AAaA,QAAMC,gBAAgB,GAAIT,GAAD,IAAS;AAC9BH,IAAAA,aAAa,CAACG,GAAD,CAAb;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEJ,UAA5B;AAAwC,MAAA,gBAAgB,EAAEa;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,UAAU,EAAEb;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA3BD;;GAAMF,W;;KAAAA,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport PlayDataTabBar from \"./PlayDataTabBar.js\";\nimport PlayDataView from \"./PlayDataView.js\";\n\nconst PlayDataApp = (props) => {\n    \n    const [currentTab, setCurrentTab] = React.useState(\"details\");\n    \n    const updatePlayData = (tab) => {\n        var newPlayData = \"\";\n        if (tab === \"details\") {\n            newPlayData += \"Likely date of composition: \" + props.play.likelyDate;\n            newPlayData += \"Genre: \" + props.play.genre;\n            newPlayData += \"Wiki Link: \" + props.play.wiki;\n            newPlayData += \"Gutenberg: \" + props.play.gutenberg;\n            newPlayData += \"Shakespeare.org Link: \" + props.play.shakespeareOrg;\n            newPlayData += \"Description: \\n\" + props.play.desc;\n        }\n        \n    }\n    \n    const updateCurrentTab = (tab) => {\n        setCurrentTab(tab);\n    }\n\n    return (\n        <div className=\"container\">\n            <PlayDataTabBar currentTab={currentTab} updateCurrentTab={updateCurrentTab}/>\n            <PlayDataView currentTab={currentTab}/>\n        </div>\n    );\n}\n\nexport default PlayDataApp"]},"metadata":{},"sourceType":"module"}