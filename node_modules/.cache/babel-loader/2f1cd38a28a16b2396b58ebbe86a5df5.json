{"ast":null,"code":"var _jsxFileName = \"/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/App.js\";\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport { cloneDeep, uniq } from 'lodash';\nimport Header from \"./components/Header.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetail from \"./components/PlayDetail.js\";\nimport About from \"./components/About.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plays: [],\n      genres: [],\n      currentPlay: null,\n      filteredPlays: [],\n      filters: {\n        title: \"\",\n        before: false,\n        beforeYear: \"\",\n        after: false,\n        afterYear: \"\",\n        genre: \"\"\n      },\n      favourites: []\n    };\n  }\n\n  async componentDidMount() {\n    if (!this.state.plays.length) {\n      try {\n        const url = \"http://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({\n          plays: data\n        }); //                this.setState({genres:uniq(data, \"genre\")});\n        //                console.log(this.state.genres);\n      } catch {\n        console.error(\"fetch error\");\n      }\n    }\n  }\n\n  render() {\n    //methods\n    const setCurrentPlay = play => {\n      this.setState({\n        currentPlay: play\n      });\n    };\n\n    const setFilters = (name, value) => {\n      const filtersCopy = { ...this.state.filters\n      };\n\n      if (name && value) {\n        filtersCopy[name] = value;\n      } else {\n        filtersCopy = {\n          title: \"\",\n          before: false,\n          beforeYear: \"\",\n          after: false,\n          afterYear: \"\",\n          genre: \"\"\n        };\n      }\n\n      console.log(filtersCopy);\n      this.setState({\n        filters: filtersCopy\n      });\n    };\n\n    const setFilteredPlays = () => {\n      const filters = this.state.filters;\n      var filteredPlays = cloneDeep(this.state.plays);\n\n      if (filters.title) {\n        filteredPlays = filteredPlays.filter(p => p.title === filters.title);\n      }\n\n      this.setState({\n        filteredPlays: filteredPlays\n      });\n    };\n\n    const addToFavourites = play => {\n      const favouritesCopy = [...this.state.favourites]; //prevent duplicates from being added\n\n      if (!favouritesCopy.find(p => p.id === play.id)) {\n        favouritesCopy.push(play);\n      }\n\n      this.setState({\n        favourites: favouritesCopy\n      });\n    };\n\n    const removeFromFavourites = play => {\n      const favouritesCopy = [...this.state.favourites];\n      const index = favouritesCopy.findIndex(p => p.id === play.id);\n      favouritesCopy.splice(index, 1);\n      this.setState({\n        favourites: favouritesCopy\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          setFilteredPlays: setFilteredPlays\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/play-list\",\n        exact: true,\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PlayList, {\n          plays: this.state.filteredPlays,\n          genres: this.state.genres,\n          favourites: this.state.favourites,\n          setFilters: setFilters,\n          setFilteredPlays: setFilteredPlays,\n          addToFavourites: addToFavourites,\n          removeFromFavourites: removeFromFavourites,\n          setCurrentPlay: setCurrentPlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/play-detail\",\n        exact: true,\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PlayDetail, {\n          play: this.state.currentPlay,\n          favourites: this.state.favourites,\n          addToFavourites: addToFavourites,\n          removeFromFavourites: removeFromFavourites\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/App.js"],"names":["React","Route","cloneDeep","uniq","Header","Home","PlayList","PlayDetail","About","App","Component","constructor","props","state","plays","genres","currentPlay","filteredPlays","filters","title","before","beforeYear","after","afterYear","genre","favourites","componentDidMount","length","url","response","fetch","data","json","setState","console","error","render","setCurrentPlay","play","setFilters","name","value","filtersCopy","log","setFilteredPlays","filter","p","addToFavourites","favouritesCopy","find","id","push","removeFromFavourites","index","findIndex","splice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport {cloneDeep, uniq} from 'lodash';\nimport Header from \"./components/Header.js\";\nimport Home from \"./components/Home.js\";\nimport PlayList from \"./components/PlayList.js\";\nimport PlayDetail from \"./components/PlayDetail.js\";\nimport About from \"./components/About.js\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {plays: [],\n                      genres: [],\n                      currentPlay: null,\n                      filteredPlays: [],\n                      filters: {title:\"\", before:false, beforeYear:\"\", after:false, afterYear:\"\", genre:\"\"},\n                      favourites: []};\n    }\n                            \n    async componentDidMount() {\n        if (!this.state.plays.length) {\n            try {\n                const url = \"http://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/list.php\";\n                const response = await fetch(url);\n                const data = await response.json();\n                this.setState({plays: data});\n//                this.setState({genres:uniq(data, \"genre\")});\n//                console.log(this.state.genres);\n            } \n            catch {\n                console.error(\"fetch error\");\n            }\n        }\n    }\n    \n    render() {\n        //methods\n        const setCurrentPlay = (play) => {\n            this.setState({currentPlay: play});\n        }\n        \n        const setFilters = (name, value) => {\n            const filtersCopy = {...this.state.filters};\n            \n            if (name && value) {\n                filtersCopy[name] = value;\n            }\n            else {\n                filtersCopy = {title:\"\", before:false, beforeYear:\"\", after:false, afterYear:\"\", genre:\"\"};\n            }\n            \n            console.log(filtersCopy);\n            this.setState({filters:filtersCopy});\n        }\n        \n        const setFilteredPlays = () => {\n            const filters = this.state.filters;\n            var filteredPlays = cloneDeep(this.state.plays);\n            \n            if (filters.title) {\n                filteredPlays = filteredPlays.filter((p) => p.title === filters.title);\n            }\n            \n            this.setState({filteredPlays: filteredPlays});\n        }\n        \n        const addToFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            \n            //prevent duplicates from being added\n            if (!favouritesCopy.find((p) => p.id === play.id)) {\n                favouritesCopy.push(play);\n            }\n            \n            this.setState({favourites:favouritesCopy});\n        }\n        \n        const removeFromFavourites = (play) => {\n            const favouritesCopy = [...this.state.favourites];\n            const index = favouritesCopy.findIndex((p) => p.id === play.id);\n            favouritesCopy.splice(index, 1);\n            this.setState({favourites:favouritesCopy});\n        }\n        \n        return (\n            <div className=\"App\">\n                <Route path=\"/\" exact><Home setFilteredPlays={setFilteredPlays}/></Route>\n                <Route path=\"/play-list\" exact>\n                    <Header/>\n                    <PlayList plays={this.state.filteredPlays}\n                              genres={this.state.genres}\n                              favourites={this.state.favourites}\n                              setFilters={setFilters}\n                              setFilteredPlays={setFilteredPlays} \n                              addToFavourites={addToFavourites}\n                              removeFromFavourites={removeFromFavourites}\n                              setCurrentPlay={setCurrentPlay}/>\n                </Route>\n                <Route path=\"/play-detail\" exact>\n                    <Header/>\n                    <PlayDetail play={this.state.currentPlay}\n                                 favourites={this.state.favourites}\n                                 addToFavourites={addToFavourites}\n                                 removeFromFavourites={removeFromFavourites}/>\n                </Route>\n                <Route path=\"/about\" exact><About/></Route>\n            </div>\n        );                \n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}