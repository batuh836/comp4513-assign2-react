{"ast":null,"code":"var _jsxFileName = \"/Users/Guild/Documents/GitHub/comp4513-assign2-react/src/components/PlayDetailApp.js\";\nimport React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport PlayData from \"./PlayData.js\";\nimport \"./css/PlayDetailApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayDetailApp extends React.Component {\n  constructor(props) {\n    super(props); //initialize available tabs\n\n    const tabs = [\"Details\", \"Characters\", \"Text\"]; //initialize state values\n\n    this.state = {\n      currentTab: tabs[0],\n      tabs: props.play.filename ? tabs : [tabs[0]],\n      playData: [],\n      currentAct: null,\n      currentScene: null,\n      currentCharacter: \"All Players\",\n      searchText: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    //only get data if filename is not null\n    if (this.props.play.filename) {\n      //find saved data with play id\n      const foundPlayData = this.props.savedPlayData.find(p => p.id === this.props.play.id); //if not saved data is found, fetch\n\n      if (!foundPlayData) {\n        try {\n          const url = \"https://comp4513-assign2-node.herokuapp.com/api/play/\" + this.props.play.id;\n          const response = await fetch(url);\n          const data = await response.json();\n          const playText = data.playText;\n          this.setState({\n            playData: playText\n          });\n          console.log(playText); //set current act and scene with first in arrays\n\n          this.setState({\n            currentAct: playText.acts[0]\n          });\n          this.setState({\n            currentScene: playText.acts[0].scenes[0]\n          }); //save play data\n\n          this.props.savePlayData(this.props.play, playText);\n        } catch {\n          console.error(\"fetch error\");\n        }\n      } else {\n        //if saved play data is found, set state values\n        this.setState({\n          playData: foundPlayData.data\n        });\n        this.setState({\n          currentAct: foundPlayData.data.acts[0]\n        });\n        this.setState({\n          currentScene: foundPlayData.data.acts[0].scenes[0]\n        });\n      }\n    }\n  }\n\n  render() {\n    const setCurrentTab = tab => {\n      this.setState({\n        currentTab: tab\n      });\n    };\n\n    const setPlayFilter = (name, value) => {\n      if (name === \"act\") {\n        //find act from play data and set first scene\n        const foundAct = this.state.playData.acts.find(a => a.name === value);\n        this.setState({\n          currentAct: foundAct\n        });\n        this.setState({\n          currentScene: foundAct.scenes[0]\n        });\n        this.setState({\n          currentCharacter: \"All Players\"\n        });\n      } else if (name === \"scene\") {\n        //find scene from current act\n        const foundScene = this.state.currentAct.scenes.find(s => s.name === value);\n        this.setState({\n          currentScene: foundScene\n        });\n        this.setState({\n          currentCharacter: \"All Players\"\n        });\n      } else if (name === \"character\") {\n        //set current character\n        this.setState({\n          currentCharacter: value\n        });\n      }\n    };\n\n    const setSearchText = text => {\n      this.setState({\n        searchText: text\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-detail hide-favourites\",\n      children: [/*#__PURE__*/_jsxDEV(FavouritesList, {\n        favourites: this.props.favourites,\n        removeFromFavourites: this.props.removeFromFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayOverview, {\n        currentTab: this.state.currentTab,\n        play: this.props.play,\n        playData: this.state.playData,\n        currentAct: this.state.currentAct,\n        currentScene: this.state.currentScene,\n        addToFavourites: this.props.addToFavourites,\n        setPlayFilter: setPlayFilter,\n        setSearchText: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayData, {\n        currentTab: this.state.currentTab,\n        tabs: this.state.tabs,\n        play: this.props.play,\n        playData: this.state.playData,\n        currentAct: this.state.currentAct,\n        currentScene: this.state.currentScene,\n        currentCharacter: this.state.currentCharacter,\n        searchText: this.state.searchText,\n        setCurrentTab: setCurrentTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default PlayDetailApp;","map":{"version":3,"sources":["/Users/Guild/Documents/GitHub/comp4513-assign2-react/src/components/PlayDetailApp.js"],"names":["React","FavouritesList","PlayOverview","PlayData","PlayDetailApp","Component","constructor","props","tabs","state","currentTab","play","filename","playData","currentAct","currentScene","currentCharacter","searchText","componentDidMount","foundPlayData","savedPlayData","find","p","id","url","response","fetch","data","json","playText","setState","console","log","acts","scenes","savePlayData","error","render","setCurrentTab","tab","setPlayFilter","name","value","foundAct","a","foundScene","s","setSearchText","text","favourites","removeFromFavourites","addToFavourites"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport PlayData from \"./PlayData.js\";\nimport \"./css/PlayDetailApp.css\";\n\nclass PlayDetailApp extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        //initialize available tabs\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        \n        //initialize state values\n        this.state = {currentTab: tabs[0],\n                      tabs: props.play.filename ? tabs : [tabs[0]],\n                      playData: [],\n                      currentAct: null,\n                      currentScene: null,\n                      currentCharacter: \"All Players\",\n                      searchText: \"\"};\n    }\n                            \n    async componentDidMount() {\n        //only get data if filename is not null\n        if (this.props.play.filename) {\n            //find saved data with play id\n            const foundPlayData = this.props.savedPlayData.find((p) => p.id === this.props.play.id);\n            \n            //if not saved data is found, fetch\n            if (!foundPlayData) {\n                try {\n                    const url = \"https://comp4513-assign2-node.herokuapp.com/api/play/\" + this.props.play.id;\n                    const response = await fetch(url);\n                    const data = await response.json();\n                    const playText = data.playText;\n                    this.setState({playData: playText});\n                    console.log(playText);\n                    \n                    //set current act and scene with first in arrays\n                    this.setState({currentAct: playText.acts[0]});\n                    this.setState({currentScene: playText.acts[0].scenes[0]});\n                    \n                    //save play data\n                    this.props.savePlayData(this.props.play, playText);\n                } \n                catch {\n                    console.error(\"fetch error\");\n                }\n            }\n            else {\n                //if saved play data is found, set state values\n                this.setState({playData: foundPlayData.data});\n                this.setState({currentAct: foundPlayData.data.acts[0]});\n                this.setState({currentScene: foundPlayData.data.acts[0].scenes[0]});\n            }\n        }\n    }\n    \n    render() {\n        const setCurrentTab = (tab) => {\n            this.setState({currentTab: tab});\n        }\n        \n        const setPlayFilter = (name, value) => {\n            if (name === \"act\") {\n                //find act from play data and set first scene\n                const foundAct = this.state.playData.acts.find((a) => a.name === value);\n                this.setState({currentAct: foundAct});\n                this.setState({currentScene: foundAct.scenes[0]});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"scene\") {\n                //find scene from current act\n                const foundScene = this.state.currentAct.scenes.find((s) => s.name === value);\n                this.setState({currentScene: foundScene});\n                this.setState({currentCharacter: \"All Players\"});\n            }\n            else if (name === \"character\") {\n                //set current character\n                this.setState({currentCharacter: value});\n            }\n        }\n        \n        const setSearchText = (text) => {\n            this.setState({searchText: text});\n        }\n        \n        return (\n            <div className=\"play-detail hide-favourites\">\n                <FavouritesList favourites={this.props.favourites} \n                                removeFromFavourites={this.props.removeFromFavourites}/>\n                <PlayOverview currentTab={this.state.currentTab} \n                              play={this.props.play} \n                              playData={this.state.playData} \n                              currentAct={this.state.currentAct} \n                              currentScene={this.state.currentScene} \n                              addToFavourites={this.props.addToFavourites}\n                              setPlayFilter={setPlayFilter}\n                              setSearchText={setSearchText}/>\n                <PlayData currentTab={this.state.currentTab} \n                          tabs={this.state.tabs} \n                          play={this.props.play} \n                          playData={this.state.playData} \n                          currentAct={this.state.currentAct}\n                          currentScene={this.state.currentScene}\n                          currentCharacter={this.state.currentCharacter}\n                          searchText={this.state.searchText}\n                          setCurrentTab={setCurrentTab}/>\n            </div>\n        );\n    }\n};\n\nexport default PlayDetailApp"]},"metadata":{},"sourceType":"module"}