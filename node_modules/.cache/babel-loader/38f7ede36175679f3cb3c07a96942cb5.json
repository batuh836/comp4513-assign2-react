{"ast":null,"code":"var _jsxFileName = \"/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/components/PlayDetailApp.js\";\nimport React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport PlayData from \"./PlayData.js\";\nimport \"./css/PlayDetailApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayDetailApp extends React.Component {\n  constructor(props) {\n    super(props);\n    const tabs = [\"Details\", \"Characters\", \"Text\"];\n    this.state = {\n      currentTab: tabs[0],\n      tabs: props.play.filename ? tabs : [tabs[0]],\n      playData: [],\n      currentAct: null,\n      currentScene: null,\n      currentCharacter: null\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.play.filename) {\n      const foundPlayData = this.props.playData.find(p => p.id === this.props.play.id);\n\n      if (!foundPlayData) {\n        try {\n          const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + this.props.play.id;\n          const response = await fetch(url);\n          const data = await response.json();\n          this.setState({\n            playData: data\n          });\n          this.setState({\n            currentAct: data.acts[0]\n          });\n          this.setState({\n            currentScene: data.acts[0].scenes[0]\n          });\n          this.setState({\n            currentCharacter: data.acts[0].scenes[0].speaches[0].speaker\n          });\n          this.props.savePlayData(this.props.play, data);\n          console.log(data);\n        } catch {\n          console.error(\"fetch error\");\n        }\n      } else {\n        this.setState({\n          playData: foundPlayData\n        });\n        this.setState({\n          currentAct: foundPlayData.acts[0]\n        });\n        this.setState({\n          currentScene: foundPlayData.acts[0].scenes[0]\n        });\n        this.setState({\n          currentCharacter: foundPlayData.acts[0].scenes[0].speaches[0].speaker\n        });\n      }\n    }\n  }\n\n  render() {\n    const setCurrentTab = tab => {\n      this.setState({\n        currentTab: tab\n      });\n    };\n\n    const setPlayFilter = (name, value) => {\n      if (name === \"act\") {\n        const foundAct = this.props.playData.acts.find(a => a.name === value);\n        this.setState({\n          currentAct: foundAct\n        });\n      } else if (name === \"scene\") {\n        const foundScene = this.props.currentAct.scenes.find(s => s.name === value);\n        this.setState({\n          currentScene: foundScene\n        });\n      } else if (name === \"character\") {\n        this.setState({\n          currentCharacter: value\n        });\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-detail hidden-favourites\",\n      children: [/*#__PURE__*/_jsxDEV(FavouritesList, {\n        favourites: this.props.favourites,\n        removeFromFavourites: this.props.removeFromFavourites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayOverview, {\n        currentTab: this.state.currentTab,\n        play: this.props.play,\n        playData: this.state.playData,\n        currentAct: this.state.currentAct,\n        currentScene: this.state.currentScene,\n        addToFavourites: this.props.addToFavourites,\n        setPlayFilter: setPlayFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayData, {\n        currentTab: this.state.currentTab,\n        tabs: this.state.tabs,\n        play: this.props.play,\n        playData: this.state.playData,\n        setCurrentTab: setCurrentTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default PlayDetailApp;","map":{"version":3,"sources":["/Users/Guild/Documents/Local_School/COMP_4533/assignment_1/my-app/src/components/PlayDetailApp.js"],"names":["React","FavouritesList","PlayOverview","PlayData","PlayDetailApp","Component","constructor","props","tabs","state","currentTab","play","filename","playData","currentAct","currentScene","currentCharacter","componentDidMount","foundPlayData","find","p","id","url","response","fetch","data","json","setState","acts","scenes","speaches","speaker","savePlayData","console","log","error","render","setCurrentTab","tab","setPlayFilter","name","value","foundAct","a","foundScene","s","favourites","removeFromFavourites","addToFavourites"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FavouritesList from \"./FavouritesList.js\";\nimport PlayOverview from \"./PlayOverview.js\";\nimport PlayData from \"./PlayData.js\";\nimport \"./css/PlayDetailApp.css\";\n\nclass PlayDetailApp extends React.Component {\n    constructor(props) {\n        super(props);\n        const tabs = [\"Details\", \"Characters\", \"Text\"];\n        this.state = {currentTab: tabs[0],\n                      tabs: props.play.filename ? tabs : [tabs[0]],\n                      playData: [],\n                      currentAct: null,\n                      currentScene: null,\n                      currentCharacter: null};\n    }\n                            \n    async componentDidMount() {\n        if (this.props.play.filename) {\n            const foundPlayData = this.props.playData.find((p) => p.id === this.props.play.id);\n\n            if (!foundPlayData) {\n                try {\n                    const url = \"https://www.randyconnolly.com//funwebdev/3rd/api/shakespeare/play.php?name=\" + this.props.play.id;\n                    const response = await fetch(url);\n                    const data = await response.json();\n                    this.setState({playData: data});\n                    this.setState({currentAct: data.acts[0]});\n                    this.setState({currentScene: data.acts[0].scenes[0]});\n                    this.setState({currentCharacter: data.acts[0].scenes[0].speaches[0].speaker});\n                    this.props.savePlayData(this.props.play, data);\n                    console.log(data);\n                } \n                catch {\n                    console.error(\"fetch error\");\n                }\n            }\n            else {\n                this.setState({playData: foundPlayData});\n                this.setState({currentAct: foundPlayData.acts[0]});\n                this.setState({currentScene: foundPlayData.acts[0].scenes[0]});\n                this.setState({currentCharacter: foundPlayData.acts[0].scenes[0].speaches[0].speaker});\n            }\n        }\n    }\n    \n    render() {\n        const setCurrentTab = (tab) => {\n            this.setState({currentTab: tab});\n        }\n        \n        const setPlayFilter = (name, value) => {\n            if (name === \"act\") {\n                const foundAct = this.props.playData.acts.find((a) => a.name === value);\n                this.setState({currentAct: foundAct});\n            }\n            else if (name === \"scene\") {\n                const foundScene = this.props.currentAct.scenes.find((s) => s.name === value);\n                this.setState({currentScene: foundScene});\n            }\n            else if (name === \"character\") {\n                this.setState({currentCharacter: value});\n            }\n        }\n        \n        return (\n            <div className=\"play-detail hidden-favourites\">\n                <FavouritesList favourites={this.props.favourites} \n                                removeFromFavourites={this.props.removeFromFavourites}/>\n                <PlayOverview currentTab={this.state.currentTab} \n                              play={this.props.play} \n                              playData={this.state.playData} \n                              currentAct={this.state.currentAct} \n                              currentScene={this.state.currentScene} \n                              addToFavourites={this.props.addToFavourites}\n                              setPlayFilter={setPlayFilter}/>\n                <PlayData currentTab={this.state.currentTab} \n                          tabs={this.state.tabs} \n                          play={this.props.play} \n                          playData={this.state.playData} \n                          setCurrentTab={setCurrentTab}/>\n            </div>\n        );\n    }\n};\n\nexport default PlayDetailApp"]},"metadata":{},"sourceType":"module"}